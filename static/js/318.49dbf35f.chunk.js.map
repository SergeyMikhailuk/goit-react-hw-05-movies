{"version":3,"file":"static/js/318.49dbf35f.chunk.js","mappings":"mMAGAA,EAAAA,EAAMC,SAASC,QAAU,+BAEzB,MAAMC,EAAS,CACbA,OAAQ,CACNC,QALY,mCAMZC,SAAU,UAIDC,EAAoBC,gBACbP,EAAAA,EAAMQ,IAAG,qBAAiDL,IACjEM,KAAKC,QAELC,EAAkBJ,gBACXP,EAAAA,EAAMQ,IAAG,uBAAAI,OAAkDC,GAAaV,IAC/EM,KAAKC,QAOLI,EAAkBP,gBACXP,EAAAA,EAAMQ,IAAG,UAAAI,OAA6BG,GAAWZ,IACxDM,KAaAO,EAAeT,gBACRP,EAAAA,EAAMQ,IAAG,SAAAI,OAAqCG,EAAO,aAAaZ,IACzEM,KAAKQ,KASLC,EAAkBX,gBACXP,EAAAA,EAAMQ,IAAG,SAAAI,OAA2CG,EAAO,aAAaZ,IAC/EM,KAAKC,O,sFChDlB,MAoCA,EApCgBS,KACd,MAAM,QAAEJ,IAAYK,EAAAA,EAAAA,OACbC,EAASC,IAAcC,EAAAA,EAAAA,UAA6B,IAgB3D,OAdAC,EAAAA,EAAAA,YAAU,KACQjB,WACd,IACE,MAAMkB,QAAmBP,EAAAA,EAAAA,IAAgBH,GAAW,IAEpDO,EAAWG,EACb,CAAE,MAAOC,GACPC,QAAQD,MAAMA,EAChB,GAGFE,GAAUC,MAAM,GACf,CAACd,KAGFe,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,SACU,OAAPX,QAAO,IAAPA,GAAAA,EAASY,QACRH,EAAAA,EAAAA,KAAA,MAAAE,SACGX,EAAQa,KAAIC,IACXC,EAAAA,EAAAA,MAAA,MAAAJ,SAAA,EACEI,EAAAA,EAAAA,MAAA,MAAAJ,SAAA,CAAI,WAASG,EAAOE,WACpBP,EAAAA,EAAAA,KAAA,KAAGQ,wBAAyB,CAAEC,OAAQJ,EAAOK,aAFtCL,EAAOM,SAOpBX,EAAAA,EAAAA,KAAA,KAAAE,SAAG,+CAEJ,C","sources":["api/moviesAPI.ts","components/Reviews/Reviews.tsx"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = '782d86e0b2ff3bbb0b829582439018d5';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nconst params = {\n  params: {\n    api_key: API_KEY,\n    language: 'en-US',\n  },\n};\n\nexport const getTrendingMovies = async () => {\n  const res = await axios.get<{ results: MovieType[] }>(`trending/movie/day`, params);\n  return res.data.results;\n};\nexport const getMoviesByName = async (movieName: string) => {\n  const res = await axios.get<{ results: MovieType[] }>(`/search/movie?query=${movieName}`, params);\n  return res.data.results;\n};\nexport type MovieType = {\n  id: number;\n  title: string;\n};\n\nexport const getMovieDetails = async (movieId: string) => {\n  const res = await axios.get<MovieDetailsType>(`/movie/${movieId}`, params);\n  return res.data;\n};\nexport type MovieDetailsType = {\n  genres: {\n    id: number;\n    name: string;\n  }[];\n  overview: string;\n  poster_path: string;\n  title: string;\n  vote_average: number;\n};\n\nexport const getMovieCast = async (movieId: string) => {\n  const res = await axios.get<{ cast: MovieCastType[] }>(`movie/${movieId}/credits?`, params);\n  return res.data.cast;\n};\nexport type MovieCastType = {\n  id: number;\n  name: string;\n  profile_path: string;\n  character: string;\n};\n\nexport const getMovieReviews = async (movieId: string) => {\n  const res = await axios.get<{ results: MovieReviewsType[] }>(`movie/${movieId}/reviews?`, params);\n  return res.data.results;\n};\nexport type MovieReviewsType = {\n  author: string;\n  content: string;\n  id: string;\n};\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport { getMovieReviews, MovieReviewsType } from 'api/moviesAPI';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState<MovieReviewsType[]>([]);\n\n  useEffect(() => {\n    const getCast = async () => {\n      try {\n        const reviewsRes = await getMovieReviews(movieId || '');\n\n        setReviews(reviewsRes);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n\n    getCast().then();\n  }, [movieId]);\n\n  return (\n    <>\n      {reviews?.length ? (\n        <ul>\n          {reviews.map(review => (\n            <li key={review.id}>\n              <h3>Author: {review.author}</h3>\n              <p dangerouslySetInnerHTML={{ __html: review.content }} />\n            </li>\n          ))}\n        </ul>\n      ) : (\n        <p>We don't have any reviews for this movie.</p>\n      )}\n    </>\n  );\n};\n\nexport default Reviews;\n"],"names":["axios","defaults","baseURL","params","api_key","language","getTrendingMovies","async","get","data","results","getMoviesByName","concat","movieName","getMovieDetails","movieId","getMovieCast","cast","getMovieReviews","Reviews","useParams","reviews","setReviews","useState","useEffect","reviewsRes","error","console","getCast","then","_jsx","_Fragment","children","length","map","review","_jsxs","author","dangerouslySetInnerHTML","__html","content","id"],"sourceRoot":""}