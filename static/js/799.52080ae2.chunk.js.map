{"version":3,"file":"static/js/799.52080ae2.chunk.js","mappings":"mMAGAA,EAAAA,EAAMC,SAASC,QAAU,+BAEzB,MAAMC,EAAS,CACbA,OAAQ,CACNC,QALY,mCAMZC,SAAU,UAIDC,EAAoBC,gBACbP,EAAAA,EAAMQ,IAAG,qBAAiDL,IACjEM,KAAKC,QAELC,EAAkBJ,gBACXP,EAAAA,EAAMQ,IAAG,uBAAAI,OAAkDC,GAAaV,IAC/EM,KAAKC,QAOLI,EAAkBP,gBACXP,EAAAA,EAAMQ,IAAG,UAAAI,OAA6BG,GAAWZ,IACxDM,KAaAO,EAAeT,gBACRP,EAAAA,EAAMQ,IAAG,SAAAI,OAAqCG,EAAO,aAAaZ,IACzEM,KAAKQ,KASLC,EAAkBX,gBACXP,EAAAA,EAAMQ,IAAG,SAAAI,OAA2CG,EAAO,aAAaZ,IAC/EM,KAAKC,O,sDCjDlB,MAaA,EAbmBS,IAAA,IAAC,OAAEC,EAAM,SAAEC,GAA0BF,EAAA,OACtDG,EAAAA,EAAAA,KAAA,MAAAC,WACW,OAANH,QAAM,IAANA,IAAAA,EAAQI,SACTJ,EAAOK,KAAIC,IACTJ,EAAAA,EAAAA,KAAA,MAAAC,UACED,EAAAA,EAAAA,KAACK,EAAAA,GAAI,CAACC,GAAE,WAAAhB,OAAac,EAAMG,IAAMC,MAAO,CAAEC,KAAMV,GAAWE,SACxDG,EAAMM,SAFFN,EAAMG,OAMhB,C,+FCRP,MA0BA,EA1BiBI,KACf,MAAOC,EAAgBC,IAAqBC,EAAAA,EAAAA,UAAsB,IAC5Df,GAAWgB,EAAAA,EAAAA,MAgBjB,OAdAC,EAAAA,EAAAA,YAAU,KACc/B,WACpB,IACE,MAAMa,QAAed,EAAAA,EAAAA,MAErB6B,EAAkBf,EACpB,CAAE,MAAOmB,GACPC,QAAQD,MAAMA,EAChB,GAGFE,GAAgBC,MAAM,GACrB,KAGDC,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAArB,SAAA,EACED,EAAAA,EAAAA,KAAA,MAAAC,SAAI,oBACJD,EAAAA,EAAAA,KAACuB,EAAAA,EAAU,CAACzB,OAAQc,EAAgBb,SAAUA,MAC7C,C","sources":["api/moviesAPI.ts","components/MoviesList/MoviesList.tsx","containers/pages/Home/HomePage.tsx"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = '782d86e0b2ff3bbb0b829582439018d5';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nconst params = {\n  params: {\n    api_key: API_KEY,\n    language: 'en-US',\n  },\n};\n\nexport const getTrendingMovies = async () => {\n  const res = await axios.get<{ results: MovieType[] }>(`trending/movie/day`, params);\n  return res.data.results;\n};\nexport const getMoviesByName = async (movieName: string) => {\n  const res = await axios.get<{ results: MovieType[] }>(`/search/movie?query=${movieName}`, params);\n  return res.data.results;\n};\nexport type MovieType = {\n  id: number;\n  title: string;\n};\n\nexport const getMovieDetails = async (movieId: string) => {\n  const res = await axios.get<MovieDetailsType>(`/movie/${movieId}`, params);\n  return res.data;\n};\nexport type MovieDetailsType = {\n  genres: {\n    id: number;\n    name: string;\n  }[];\n  overview: string;\n  poster_path: string;\n  title: string;\n  vote_average: number;\n};\n\nexport const getMovieCast = async (movieId: string) => {\n  const res = await axios.get<{ cast: MovieCastType[] }>(`movie/${movieId}/credits?`, params);\n  return res.data.cast;\n};\nexport type MovieCastType = {\n  id: number;\n  name: string;\n  profile_path: string;\n  character: string;\n};\n\nexport const getMovieReviews = async (movieId: string) => {\n  const res = await axios.get<{ results: MovieReviewsType[] }>(`movie/${movieId}/reviews?`, params);\n  return res.data.results;\n};\nexport type MovieReviewsType = {\n  author: string;\n  content: string;\n  id: string;\n};\n","import { Link } from 'react-router-dom';\n\nimport { MovieType } from 'api/moviesAPI';\n\nconst MoviesList = ({ movies, location }: MoviesListType) => (\n  <ol>\n    {!!movies?.length &&\n      movies.map(movie => (\n        <li key={movie.id}>\n          <Link to={`/movies/${movie.id}`} state={{ from: location }}>\n            {movie.title}\n          </Link>\n        </li>\n      ))}\n  </ol>\n);\n\nexport default MoviesList;\n\ntype MoviesListType = {\n  movies: MovieType[];\n  location: any;\n};\n","import React, { useEffect, useState } from 'react';\nimport { useLocation } from 'react-router-dom';\n\nimport { getTrendingMovies, MovieType } from 'api/moviesAPI';\nimport MoviesList from 'components/MoviesList/MoviesList';\n\nconst HomePage = () => {\n  const [trendingMovies, setTrendingMovies] = useState<MovieType[]>([]);\n  const location = useLocation();\n\n  useEffect(() => {\n    const getMoviesList = async () => {\n      try {\n        const movies = await getTrendingMovies();\n\n        setTrendingMovies(movies);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n\n    getMoviesList().then();\n  }, []);\n\n  return (\n    <>\n      <h1>Trending today</h1>\n      <MoviesList movies={trendingMovies} location={location} />\n    </>\n  );\n};\n\nexport default HomePage;\n"],"names":["axios","defaults","baseURL","params","api_key","language","getTrendingMovies","async","get","data","results","getMoviesByName","concat","movieName","getMovieDetails","movieId","getMovieCast","cast","getMovieReviews","_ref","movies","location","_jsx","children","length","map","movie","Link","to","id","state","from","title","HomePage","trendingMovies","setTrendingMovies","useState","useLocation","useEffect","error","console","getMoviesList","then","_jsxs","_Fragment","MoviesList"],"sourceRoot":""}